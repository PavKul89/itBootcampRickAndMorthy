{"ast":null,"code":"var _jsxFileName = \"D:\\\\developer\\\\itBoocampProjectRickAndMorthy\\\\src\\\\components\\\\Posts.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Post from './Post';\nimport BackToTopButton from './BackToTopButton';\nimport './Post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s2();\n  var _s = $RefreshSig$();\n  const fetchMoreData = () => {\n    _s();\n    useEffect(() => {\n      fetch('https://rickandmortyapi.com/api/character').then(res => res.json()).then(posts => {\n        setPosts(posts.results);\n      }).catch(error => setError(error.message)).finally(() => setIsLoading(false));\n    }, []);\n  };\n  _s(fetchMoreData, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"...Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error:\", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: posts.length,\n      next: fetchMoreData,\n      children: [posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        ...post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(BackToTopButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s2(Posts, \"wnmaPv9CWF5sS73NxIfBd1AjyzU=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","InfiniteScroll","Post","BackToTopButton","jsxDEV","_jsxDEV","Posts","_s2","_s","$RefreshSig$","fetchMoreData","fetch","then","res","json","posts","setPosts","results","catch","error","setError","message","finally","setIsLoading","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","className","dataLength","length","next","map","post","id","_c","$RefreshReg$"],"sources":["D:/developer/itBoocampProjectRickAndMorthy/src/components/Posts.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Post from './Post';\r\nimport BackToTopButton from './BackToTopButton';\r\nimport './Post.css';\r\n\r\nfunction Posts() {\r\n  const fetchMoreData = () => {\r\n    useEffect(() => {\r\n      fetch('https://rickandmortyapi.com/api/character')\r\n        .then((res) => res.json())\r\n        .then((posts) => {\r\n          setPosts(posts.results);\r\n        })\r\n        .catch((error) => setError(error.message))\r\n        .finally(() => setIsLoading(false));\r\n    }, []);\r\n  };\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  if (isLoading) {\r\n    return <h1>...Loading</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>Error:{error}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      <InfiniteScroll dataLength={posts.length} next={fetchMoreData}>\r\n        {posts.map((post) => (\r\n          <Post key={post.id} {...post} />\r\n        ))}\r\n        <BackToTopButton />\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,KAAKA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACf,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAAAF,EAAA;IAC1BR,SAAS,CAAC,MAAM;MACdW,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,KAAK,IAAK;QACfC,QAAQ,CAACD,KAAK,CAACE,OAAO,CAAC;MACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAACE,OAAO,CAAC,CAAC,CACzCC,OAAO,CAAC,MAAMC,YAAY,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;EAACf,EAAA,CAVIE,aAAa;EAWnB,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyB,SAAS,EAAED,YAAY,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAEhD,IAAIyB,SAAS,EAAE;IACb,oBAAOnB,OAAA;MAAAoB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC5B;EAEA,IAAIV,KAAK,EAAE;IACT,oBAAOd,OAAA;MAAAoB,QAAA,GAAI,QAAM,EAACN,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B;EAEA,oBACExB,OAAA;IAAKyB,SAAS,EAAC,OAAO;IAAAL,QAAA,eACpBpB,OAAA,CAACJ,cAAc;MAAC8B,UAAU,EAAEhB,KAAK,CAACiB,MAAO;MAACC,IAAI,EAAEvB,aAAc;MAAAe,QAAA,GAC3DV,KAAK,CAACmB,GAAG,CAAEC,IAAI,iBACd9B,OAAA,CAACH,IAAI;QAAA,GAAmBiC;MAAI,GAAjBA,IAAI,CAACC,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAChC,CAAC,eACFxB,OAAA,CAACF,eAAe;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACtB,GAAA,CAlCQD,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAoCd,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}