{"ast":null,"code":"var _jsxFileName = \"D:\\\\developer\\\\itBoocampProjectRickAndMorthy\\\\src\\\\components\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Post from './Post';\nimport BackToTopButton from './BackToTopButton';\nimport './Post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState(Array.from({\n    length: 20\n  }));\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(true);\n  useEffect(() => {\n    fetch('https://rickandmortyapi.com/api/character').then(res => res.json()).then(posts => {\n      setPosts(posts.results);\n    }).catch(error => setError(error.message)).finally(() => setIsLoading(false));\n  }, []);\n  const fetchMoreData = () => {\n    setPosts(posts.concat);\n    // if (posts.length < 826) {\n    //   fetch('https://rickandmortyapi.com/api/character/?page=2')\n    //     .then((res) => res.json())\n    //     .then((posts) => {\n    //       setPosts(posts.results);\n    //     })\n    //     .catch((error) => setError(error.message))\n    //     .finally(() => setIsLoading(false));\n    // } else {\n    //   setHasMore(false);\n    // }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"...Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error:\", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      className: \"infinityScroll\",\n      dataLength: posts.length,\n      next: fetchMoreData,\n      hasMore: hasMore,\n      loader: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this),\n      endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u0436\\u0435\\u0439 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0435\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this),\n      children: [posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        ...post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(BackToTopButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"b01lDP6cTRMYSeW0VL/Yd6E1u7M=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","InfiniteScroll","Post","BackToTopButton","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","Array","from","length","error","setError","isLoading","setIsLoading","hasMore","setHasMore","fetch","then","res","json","results","catch","message","finally","fetchMoreData","concat","children","fileName","_jsxFileName","lineNumber","columnNumber","className","dataLength","next","loader","endMessage","map","post","id","_c","$RefreshReg$"],"sources":["D:/developer/itBoocampProjectRickAndMorthy/src/components/Posts.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Post from './Post';\r\nimport BackToTopButton from './BackToTopButton';\r\nimport './Post.css';\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState(Array.from({ length: 20 }));\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch('https://rickandmortyapi.com/api/character')\r\n      .then((res) => res.json())\r\n      .then((posts) => {\r\n        setPosts(posts.results);\r\n      })\r\n      .catch((error) => setError(error.message))\r\n      .finally(() => setIsLoading(false));\r\n  }, []);\r\n\r\n  const fetchMoreData = () => {\r\n    setPosts(posts.concat);\r\n    // if (posts.length < 826) {\r\n    //   fetch('https://rickandmortyapi.com/api/character/?page=2')\r\n    //     .then((res) => res.json())\r\n    //     .then((posts) => {\r\n    //       setPosts(posts.results);\r\n    //     })\r\n    //     .catch((error) => setError(error.message))\r\n    //     .finally(() => setIsLoading(false));\r\n    // } else {\r\n    //   setHasMore(false);\r\n    // }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <h1>...Loading</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>Error:{error}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      <InfiniteScroll\r\n        className=\"infinityScroll\"\r\n        dataLength={posts.length}\r\n        next={fetchMoreData}\r\n        hasMore={hasMore}\r\n        loader={<p>Loading...</p>}\r\n        endMessage={<p>список персонажей окончен</p>}\r\n      >\r\n        {posts.map((post) => (\r\n          <Post key={post.id} {...post} />\r\n        ))}\r\n        <BackToTopButton />\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}